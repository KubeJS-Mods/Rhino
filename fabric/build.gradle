plugins {
	id 'me.shedaniel.unified-publishing'
}

def generatedResources = file("src/generated/resources")
def accessWidenerFile = project(":common").file("src/main/resources/rhino.accesswidener")

architectury {
	platformSetupLoomIde()
	fabric()
}

configurations {
	developmentFabric.extendsFrom common
}

loom {
	accessWidenerPath = accessWidenerFile
}


dependencies {
	modApi("net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}")

	common(project(path: ":common", configuration: "namedElements")) { transitive false }
	bundle(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

// The AW file is needed in :fabric project resources when the game is run.
task copyAccessWidener(type: Copy) {
	from accessWidenerFile
	into generatedResources
}

sourceSets {
	main {
		resources {
			srcDir copyAccessWidener
		}
	}
}

processResources {
	dependsOn copyAccessWidener

	def toReplace = [
			"version": project.version
	]

	inputs.properties toReplace
	filesMatching("fabric.mod.json") {
		expand toReplace
	}
}

components.java {
	withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
		skip()
	}
}

unifiedPublishing {
	project {
		releaseType = "${ENV.RELEASE_TYPE ?: 'release'}"
		gameVersions = Arrays.asList(rootProject.supported_versions.split(','))
		gameLoaders = ["fabric", "quilt"]
		displayName = "$mod_name Fabric $project.version"
		changelog = getGitChangelog()
		mainPublication remapJar

		if (ENV.CURSEFORGE_KEY) {
			curseforge {
				token = ENV.CURSEFORGE_KEY
				id = project.curseforge_id
			}
		}

		if (ENV.MODRINTH_TOKEN) {
			modrinth {
				token = ENV.MODRINTH_TOKEN
				id = project.modrinth_id
				version = "$project.version+$project.name"
			}
		}
	}
}

publishing {
	publications {
		mavenFabric(MavenPublication) {
			artifactId = "${rootProject.archives_base_name}-${project.name}"
			from components.java
		}
	}

	repositories {
		if (ENV.MAVEN_TOKEN) {
			maven {
				url "https://maven.latvian.dev/releases"
				credentials {
					username = "lat"
					password = "${ENV.MAVEN_TOKEN}"
				}
			}
		}

		if (ENV.SAPS_TOKEN) {
			maven {
				url "https://maven.saps.dev/releases"
				credentials {
					username = "latvian"
					password = "${ENV.SAPS_TOKEN}"
				}
			}
		}
	}
}
